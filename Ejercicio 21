% =============================================== 
% Autor: De La Teja Gonzalez Miguel Adolfo 
% Fecha: 6 de Noviembre de 2024 
% Descripción: 50 ejercicios 
% ===============================================

% -------- Transposición de una matriz		------------

section .data
    n dd 3                                ; Dimensión de la matriz (3x3 en este caso)
    matriz dd 1, 2, 3,                    ; Matriz original (almacenada en forma lineal)
           4, 5, 6,
           7, 8, 9

section .bss
    matrizT resd 9                        ; Matriz transpuesta (reserva espacio para n*n)

section .text
    global _start

_start:
    mov ecx, 0                            ; Índice del bucle externo (filas)
    mov eax, [n]                          ; Cargar el tamaño de la matriz en eax

transposicion:
    mov ebx, 0                            ; Índice del bucle interno (columnas)

    ; Para cada fila
fila_loop:
    ; Calcular la posición de matriz[i][j] = i * n + j
    mov edx, ecx                          ; edx = i (fila)
    mul edx                               ; eax = i * n
    add eax, ebx                          ; eax = i * n + j

    ; Cargar matriz[i][j]
    mov esi, eax                          ; Índice de matriz original
    shl esi, 2                            ; Multiplicamos por 4 para obtener el byte offset
    mov edi, [matriz + esi]               ; Cargar matriz[i][j] en edi

    ; Calcular la posición de matrizT[j][i] = j * n + i
    mov eax, ebx                          ; eax = j (columna)
    mul dword [n]                         ; eax = j * n
    add eax, ecx                          ; eax = j * n + i

    ; Guardar el valor en matrizT[j][i]
    mov esi, eax                          ; Índice de matriz transpuesta
    shl esi, 2                            ; Multiplicamos por 4 para obtener el byte offset
    mov [matrizT + esi], edi              ; Guardar matriz[i][j] en matrizT[j][i]

    ; Incrementar índice de columnas
    inc ebx
    cmp ebx, [n]                          ; Si j < n, repetir columna
    jl fila_loop

    ; Incrementar índice de filas
    inc ecx
    cmp ecx, [n]                          ; Si i < n, repetir fila
    jl transposicion

    ; Salir del programa (por simplicidad, no se muestra cómo imprimir la matriz transpuesta)
    mov eax, 1                            ; syscall para salir
    int 0x80

